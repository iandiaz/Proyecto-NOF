

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Calendar;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;

/**
 * Servlet implementation class iguia
 */
@WebServlet("/iguia")
public class iguia extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public iguia() {
        super();
        // TODO Auto-generated constructor stub
    }
    
    public boolean validateSession(HttpServletRequest request, HttpServletResponse response){
		
  		boolean user_in_session=false;
  		Cookie [] cookies=request.getCookies();
  		
  		if (cookies != null) {
  		    for (Cookie cookie : cookies) {
  		        //work with cookies
  		    	 //System.out.println("cookie: "+cookie.getName());
  		    	if(cookie.getName().equals("Usuarios_id")) user_in_session=true;
  		    }
  		}
  		//refrescamos la session 
  		
  		if (user_in_session && cookies != null) {
  		    for (Cookie cookie : cookies) {
  		        //work with cookies
  		    	 //System.out.println("cookie: "+cookie.getName());
  		    	if(cookie.getName().equals("Usuarios_id")) {cookie.setMaxAge(Constantes.T_SESSION);cookie.setPath("/");response.addCookie(cookie);}
  		    	if(cookie.getName().equals("Usuarios_nombre")) {cookie.setMaxAge(Constantes.T_SESSION);cookie.setPath("/");response.addCookie(cookie);}
  		    	if(cookie.getName().equals("Usuarios_login")) {cookie.setMaxAge(Constantes.T_SESSION);cookie.setPath("/");response.addCookie(cookie);}
  		    	if(cookie.getName().equals("Usuarios_email")) {cookie.setMaxAge(Constantes.T_SESSION);cookie.setPath("/");response.addCookie(cookie);}
  		    	if(cookie.getName().equals("tipo_usu_id")) {cookie.setMaxAge(Constantes.T_SESSION);cookie.setPath("/");response.addCookie(cookie);}
  		    }
  		}
  		
  		
  		return user_in_session;
  		
      }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		if(validateSession(request, response)){
			
			 mt(request,response);
		}
		else response.sendRedirect("/001/");
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		if(validateSession(request, response)){
			
			 mt(request,response);
		}
		else response.sendRedirect("/001/");
	}
	
	public void mt(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException{
		
		PrintWriter out = response.getWriter();		
		
		// logout
		Cookie [] cookies=request.getCookies();
		if(request.getParameter("logout") !=  null){
			if (cookies != null) {
			    for (Cookie cookie : cookies) {
			        //work with cookies
			    	 System.out.println("cookie logout: "+cookie.getName());
			    	if(cookie.getName().equals("Usuarios_id")) {cookie.setMaxAge(0);cookie.setPath("/");response.addCookie(cookie);}
			    }
			}
				response.sendRedirect("/001/");
				return;
		}
		//fin logout

		String Usuarios_nombre="",id_usuario="";
		Calendar ahoraCal = Calendar.getInstance();
		String fecha=ahoraCal.get(Calendar.DATE)+"-"+(ahoraCal.get(Calendar.MONTH)+1)+"-"+ahoraCal.get(Calendar.YEAR);
		String hora=ahoraCal.get(Calendar.HOUR_OF_DAY)+":"+ahoraCal.get(Calendar.MINUTE)+":"+ahoraCal.get(Calendar.SECOND);
		if (cookies != null) {
		    for (Cookie cookie : cookies) {
		        //work with cookies
		    	 //System.out.println("cookie: "+cookie.getName());
		    	if(cookie.getName().equals("Usuarios_id") && cookie.getValue()!=null) id_usuario=cookie.getValue();
		    	if(cookie.getName().equals("Usuarios_nombre")) Usuarios_nombre=cookie.getValue()+" "+fecha+" "+hora;
		    }
		}		
		request.setAttribute("usuname", Usuarios_nombre);	
		
		//grabar
		boolean guiaexiste=false;
		if(request.getParameter("grabar") != null){
			Statement stategrabar = null;	
			try {
				Statement state = null;
				Statement state_fac = null;
				Statement state_facdet = null;
				Statement state_ins = null;
				Statement state_des = null;
				
				//import java.io.IOException;
				Class.forName("com.mysql.jdbc.Driver");
	    		Connection conexion=(Connection) DriverManager.getConnection
	    	    		("jdbc:mysql://"+Constantes.SERVER+"/"+Constantes.CATALOGO,Constantes.USER,Constantes.PASS);
	    		state = (Statement) ((java.sql.Connection) conexion).createStatement();
				stategrabar = (Statement) ((java.sql.Connection) conexion).createStatement();
				state_fac = (Statement) ((java.sql.Connection) conexion).createStatement();
				state_facdet = (Statement) ((java.sql.Connection) conexion).createStatement();
				state_ins = (Statement) ((java.sql.Connection) conexion).createStatement();
				state_des = (Statement) ((java.sql.Connection) conexion).createStatement();
				
			    //DATOS DE LA TABLA FACTURA
				String GID="";
				String clientes_id = request.getParameter("clientes_id");
				String empresas_id = request.getParameter("empresas_id");
				String cond = request.getParameter("condiciones");
				String did = request.getParameter("did");
				String cont_id = request.getParameter("cont_id");
				String ref = request.getParameter("ref");
				String obs = request.getParameter("obs");
				String obs2 = "SOLO TRASLADO NO CONSTITUYE VENTA";
				
				String dire_id=request.getParameter("o_id");
				String dire_id2=request.getParameter("d_id");
				
				//INSERTAMOS TODOS LOS DATOS EN NOF EN EL DETALLE DE LA FACTURA
				String SQL_FACDET = "INSERT INTO guia_des_tras_normal (clientes_id, dire_id, dire_id2, empresa_id, guia_des_tras_normal_condiciones,"
						+ " cont_id, guia_des_tras_normal_ref, guia_des_tras_normal_obs, guia_des_tras_normal_obs2, guia_des_tras_normal_feccreacion,"
						+ " guia_des_tras_normal_creador, estados_vig_novig_id, guia_des_tras_normal_fechaemision) "
				    			+ "VALUES ("+clientes_id+","+dire_id+","+dire_id2+","+empresas_id+",'"+cond+"',"+cont_id+",'"+ref+"','"+obs+"','"+obs2+"',"
				    					+ "now(),"+id_usuario+",1,now())";
				System.out.println(SQL_FACDET);
				state.executeUpdate(SQL_FACDET,Statement.RETURN_GENERATED_KEYS);
			    
			    ResultSet generatedKeys = null;
			    generatedKeys = state.getGeneratedKeys();
			    //String id_g="";
			    if (generatedKeys.next()) {
			    	GID=generatedKeys.getString(1);
	    		}
			   
	    		String[] seleccionado_detguias = request.getParameterValues("tras_id[]");
	    		if(seleccionado_detguias!=null)
	    			//for (String id_gi: seleccionado_detguias) {
		    		//	if(id_gi!=null && !id_gi.equals("-1")){
		    				for(int i =0; i<seleccionado_detguias.length; i++){
			    				String[] Guias = seleccionado_detguias[i].split("/");
			    				String SQL_GUIADET = "INSERT INTO detalle_guia_des_trasnormal"
			    						+ "(guia_des_tras_normal_id, alt_id, PROD_PN_TLI_CODFAB, PROD_DESC_CORTO, PROD_COD_BAR_FAB,"
			    						+ " ALT_SERIE, UBI_DESCRIPCION, clientes_id, estados_vig_novig_id, TRAS_FECHA) "
				  	    				+ "VALUES ("+GID+","+Guias[0]+",'"+Guias[1]+"','"+Guias[2]+"','"+Guias[3]+"','"+Guias[4]+"','"+Guias[5]+"',"
				  	    						+ ""+clientes_id+",1,'"+Guias[6]+"')";
			    				System.out.println(SQL_GUIADET);
				      			state_ins.executeUpdate(SQL_GUIADET);
		    				}
		    		//	}
		    		//}
	        	
	        	RequestDispatcher rd_up = request.getRequestDispatcher("menuguia?Exito=OK");
	        	rd_up.forward(request, response);
	        	//return;
	        	
			}catch(Exception ex){
				ex.printStackTrace();
			    out.println("ERROR "+ex);
			}
			
		}else{
		
			try {
				Statement state = null;
				ResultSet CLIENTE_RS = null;
				ResultSet EMPRESAS_RS = null;
				ResultSet CONTACTOS_RS = null;
				ResultSet GUIAS_RS = null;
				
				//import java.io.IOException;
				Class.forName("com.mysql.jdbc.Driver");
	    		Connection conexion=(Connection) DriverManager.getConnection
	    	    		("jdbc:mysql://"+Constantes.SERVER+"/"+Constantes.CATALOGO,Constantes.USER,Constantes.PASS);
	    		state = (Statement) ((java.sql.Connection) conexion).createStatement();
	    		
	    		String condiciones=request.getParameter("condiciones");
	    		String ref=request.getParameter("ref");
	    		String obs=request.getParameter("obs");
	    		
	    		request.setAttribute("condiciones",condiciones);
	    		request.setAttribute("ref",ref);
	    		request.setAttribute("obs",obs);
	    		
	    		String EID = request.getParameter("clientes_id");
	    		String DID = request.getParameter("did");
	    		request.setAttribute("did",DID);
	    		request.setAttribute("clientes_id",EID);
	    		
	    		ConBirt birtBD2= new ConBirt();
	    		
	    		
	    		
	    		
	 	   		//--------------------- EMISOR ----------------------//
			    String SQL_EMPRESA = "SELECT * FROM empresas WHERE estados_vig_novig_id = 1 AND empresas_relacionada = 1 ORDER BY empresas_nombre";
			    EMPRESAS_RS =  state.executeQuery(SQL_EMPRESA);
			    ArrayList<String> empresas = new ArrayList<String>();
			    while(EMPRESAS_RS.next()){ empresas.add(EMPRESAS_RS.getString("empresas_id")+"/"+EMPRESAS_RS.getString("empresas_nombre")); }
			    EMPRESAS_RS.close();
			    String[] ar_empresas = new String[empresas.size()];
			    for(int x=0; x < empresas.size(); x++){ ar_empresas[x]=empresas.get(x);}
			    request.setAttribute("ar_empresas", ar_empresas);
			    //----------------------- FIN ------------------------//

			    //--------------------- CONTACTO ----------------------//
			    String SQL_CONTACTO = "SELECT * FROM contacto WHERE CLPR_ID = "+EID+" ORDER BY cont_nombre ";
			    CONTACTOS_RS =  state.executeQuery(SQL_CONTACTO);
			    ArrayList<String> contactos = new ArrayList<String>();
			    while(CONTACTOS_RS.next()){ contactos.add(	CONTACTOS_RS.getString("cont_id")+"/"+
			    											CONTACTOS_RS.getString("cont_nombre").replace("/", " ")+"/"+
			    											CONTACTOS_RS.getString("CLPR_ID")+"/"+
			    											//CONTACTOS_RS.getString("PERS_ID")+"/"+
			    											CONTACTOS_RS.getString("CONT_TELEFONO").replace("/", " ")+"/"+
			    											CONTACTOS_RS.getString("CONT_EMAIL")); }
			    CONTACTOS_RS.close();
			    String[] ar_contactos = new String[contactos.size()];
			    for(int x=0; x < contactos.size(); x++){ ar_contactos[x]=contactos.get(x);}
			    request.setAttribute("ar_contactos", ar_contactos);
			    //----------------------- FIN ------------------------//
			    //--------------------- EMPRESA ORIGEN ----------------------//
			    String SQL_ORIGEN = "SELECT "
			    		+ "		`direccion`.`DIRE_DIRECCION`,"
			    		+ "		`empresas`.`empresas_razonsocial`,"
			    		+ "		`empresas`.`empresas_id`,"
			    		+ "		`empresas`.`empresas_rut`,"
			    		+ "		`direccion`.`DIRE_CIUDAD`,"
			    		+ "		`comuna`.`COMU_NOMBRE`,"
			    		+ "		`region`.`REGI_NOMBRE`"
			    		+ "	FROM"
			    		+ "		`direccion`"
			    		+ "	INNER JOIN `empresas` ON `empresas`.`empresas_id` = `direccion`.`CLPR_ID`"
			    		+ "	INNER JOIN `comuna` ON `comuna`.`COMU_ID` = `direccion`.`COMU_ID`"
			    		+ "	INNER JOIN `region` ON `region`.`REGI_ID` = `comuna`.`REGI_ID`"
			    		+ "	WHERE"
			    		+ "		`direccion`.`DIRE_ID` = "+request.getParameter("o_id");
			    
			    ResultSet ORIGEN_RS = state.executeQuery(SQL_ORIGEN);
			    while(ORIGEN_RS.next()){ 
			    	
			    	request.setAttribute("ORIGEN_DIRE_DIRECCION", ORIGEN_RS.getString("DIRE_DIRECCION"));
			    	request.setAttribute("ORIGEN_empresas_razonsocial", ORIGEN_RS.getString("empresas_razonsocial"));
			    	request.setAttribute("ORIGEN_empresas_id", ORIGEN_RS.getString("empresas_id"));
			    	request.setAttribute("ORIGEN_empresas_rut", ORIGEN_RS.getString("empresas_rut"));
			    	request.setAttribute("ORIGEN_DIRE_CIUDAD", ORIGEN_RS.getString("DIRE_CIUDAD"));
			    	
			    	request.setAttribute("ORIGEN_COMU_NOMBRE", ORIGEN_RS.getString("COMU_NOMBRE"));
			    	request.setAttribute("ORIGEN_REGI_NOMBRE", ORIGEN_RS.getString("REGI_NOMBRE"));
			    	
			   }
			    ORIGEN_RS.close();
			   
			   
			    //----------------------- FIN ------------------------//
			    //--------------------- EMPRESA DESTINO ----------------------//
			    String SQL_DESTINO = "SELECT "
			    		+ "		`direccion`.`DIRE_DIRECCION`,"
			    		+ "		`empresas`.`empresas_razonsocial`,"
			    		+ "		`empresas`.`empresas_id`,"
			    		+ "		`empresas`.`empresas_rut`,"
			    		+ "		`direccion`.`DIRE_CIUDAD`,"
			    		+ "		`comuna`.`COMU_NOMBRE`,"
			    		+ "		`region`.`REGI_NOMBRE`"
			    		+ "	FROM"
			    		+ "		`direccion`"
			    		+ "	INNER JOIN `empresas` ON `empresas`.`empresas_id` = `direccion`.`CLPR_ID`"
			    		+ "	INNER JOIN `comuna` ON `comuna`.`COMU_ID` = `direccion`.`COMU_ID`"
			    		+ "	INNER JOIN `region` ON `region`.`REGI_ID` = `comuna`.`REGI_ID`"
			    		+ "	WHERE"
			    		+ "		`direccion`.`DIRE_ID` = "+request.getParameter("d_id");
			    
			    ResultSet DESTINO_RS = state.executeQuery(SQL_DESTINO);
			    while(DESTINO_RS.next()){ 
			    	
			    	request.setAttribute("DESTINO_DIRE_DIRECCION", DESTINO_RS.getString("DIRE_DIRECCION"));
			    	request.setAttribute("DESTINO_empresas_razonsocial", DESTINO_RS.getString("empresas_razonsocial"));
			    	request.setAttribute("DESTINO_empresas_id", DESTINO_RS.getString("empresas_id"));
			    	request.setAttribute("DESTINO_empresas_rut", DESTINO_RS.getString("empresas_rut"));
			    	request.setAttribute("DESTINO_DIRE_CIUDAD", DESTINO_RS.getString("DIRE_CIUDAD"));
			    	
			    	request.setAttribute("DESTINO_COMU_NOMBRE", DESTINO_RS.getString("COMU_NOMBRE"));
			    	request.setAttribute("DESTINO_REGI_NOMBRE", DESTINO_RS.getString("REGI_NOMBRE"));
			    	
			   }
			    DESTINO_RS.close();
			   
			   
			    //----------------------- FIN ------------------------//
			    
	 	   		//--------------------- TRASLADOS ----------------------//
			    request.setAttribute("d_id", request.getParameter("d_id"));
			    request.setAttribute("o_id", request.getParameter("o_id"));
		    			    	
			    
			    if(request.getParameter("agregar") != null){
			    	String[] seleccionado = request.getParameterValues("permisos[]");
				    if(seleccionado!=null){
				    	request.setAttribute("ar_guias", seleccionado);
				    }
				}
			    //----------------------- FIN ------------------------//
			    
			}catch(Exception ex){
			    out.println("ERROR: "+ex);
			    ex.printStackTrace();
			}
		String msg="";
		if(guiaexiste){
			msg="?Exito=NOK";
			String condiciones = request.getParameter("condiciones");
			String ref = request.getParameter("ref");
			String obs = request.getParameter("obs");
			request.setAttribute("condiciones",condiciones);
			request.setAttribute("ref",ref);
			request.setAttribute("obs",obs);
			//System.out.println("grupos_nombre "+grupos_nombre);
		}
		RequestDispatcher rd = request.getRequestDispatcher("iguia.jsp"+msg);
	    rd.forward(request, response);
		
		}
		
	}

}
